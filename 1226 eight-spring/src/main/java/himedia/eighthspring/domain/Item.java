package himedia.eighthspring.domain;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.springframework.lang.Nullable;

import lombok.Getter;
import lombok.Setter;

/*
-- [테이블 생성] =============================
create table item (
id bigint generated by default as identity,
itemname varchar(255),
price int,
quantity int,
open boolean,
regions varchar(100),
itemtype varchar(1024) check(itemtype in ('BEAUTY', 'BOOK', 'FASHION', 'FOOD', 'ETC')),
deliverycode varchar(20),
primary key(id)
);

-- [조회] =====================================
select * from item;

-- [추가] =====================================
insert into item(itemname, price, quantity, open, regions, itemtype, deliverycode)
values('빼빼로', 2500, 6, true, '서울', 'BEAUTY', 'SLOW'); 

insert into item(itemname, price, quantity, open, regions, itemtype, deliverycode)
values('감자', 500, 60, false, '인천', 'BOOK', 'TODAY'); 
*/


@Entity
@Setter @Getter
@Table(name = "item")
public class Item {
	@Id @GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(name = "itemname") 		//[주의] 소문자 사용
	private String itemName;
	
	private Integer price;
	private Integer quantity;
	
	// 추가된 field : START -----------------------------------------------------
	private Boolean open;			// 판매 여부
	
	@ElementCollection(targetClass=String.class) // @Entity에서 List type 처리
	@Nullable						//null 허용 (cf: @NonNull - null 허용하지 않음)
	private List<String> regions = new ArrayList<>();	// 지역
	
	/**
	 * EnumType.ORDINAL : enum 순서 값을 DB에 저장
	 * EnumType.STRING : enum 이름을 DB에 저장
	 */
	@Enumerated(value = EnumType.STRING)
	//@Nullable						//null 허용 (cf: @NonNull - null 허용하지 않음)
	@Column(name = "itemtype")		//[주의] 소문자 사용
	private ItemType itemType;		// 상품 종류
	
	@Column(name = "deliverycode")
	private String deliveryCode;	// 배송 방식
	
	// 추가된 field : END --------------------------------------------------------
	
	public Item() {}
	
	public Item(String itemName, Integer price, Integer quantity, Boolean open, List<String> regions, ItemType itemType, String deliveryCode) {
		this.itemName = itemName;
		this.price = price;
		this.quantity = quantity;
	}
}